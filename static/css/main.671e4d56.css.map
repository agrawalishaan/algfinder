{"version":3,"file":"static/css/main.671e4d56.css","mappings":"AAAA,KAOE,kCAAmC,CACnC,iCAAkC,CAElC,uCAAwC,CAExC,wBAAyB,CARzB,mIAEY,CAOZ,8BAAkC,CAClC,cAAe,CACf,eAAgB,CAbhB,QAAS,CACT,SAaF,CAEA,OAEE,qBACF,CAGA,KACE,uEAEF,CAEA,YACE,wBAAyB,CACzB,aACF,CAEA,aACE,wBACF,CAEA,YACE,wBAAyB,CACzB,UACF,CAEA,WACE,wBACF,CAEA,UACE,aACF,CAEA,gBACE,qBACF,CAEA,SACE,YAAa,CAEb,QAEF,CAEA,MACE,YAAa,CACb,qBAAsB,CACtB,YAEF,CAIA,WACE,qBACF,CAEA,oBACE,wBACF,CAEA,mBACE,wBAAyB,CACzB,UACF,CAEA,kBACE,wBACF,CAEA,iBACE,aACF,CAEA,uBACE,wBACF,CAGA,yBAGE,SACE,gBACF,CACF,CAEA,yBACE,SACE,kBAAmB,CAInB,QAAO,CAFP,qBAAsB,CAItB,gBAAiB,CAEjB,UAEF,CACF,CCtHA,YACE,kBAAmB,CACnB,wBAAyB,CACzB,WAAY,CACZ,iBAAkB,CAClB,qBAAsB,CACtB,aAAc,CACd,YAAa,CACb,WAAY,CACZ,sBAAuB,CACvB,gBAAiB,CACjB,SAAU,CACV,UACF,CAEA,kBAEE,wBAAyB,CADzB,cAEF,CAEA,mBACE,wBAAyB,CACzB,aACF,CAEA,yBACE,wBACF,CAEA,yBACE,YACE,gBACF,CACF,CAEA,yBACE,YACE,aAAc,CACd,YACF,CACF,CCxCA,KACE,UAAY,CACZ,aAAc,CACd,iBAAkB,CAClB,iBAAkB,CAClB,oBACF,CAGA,wBACE,wBACF,CAEA,QACE,aACF,CAEA,WACE,kBAAmB,CAEnB,wBAAyB,CAEzB,YAAa,CACb,6BAA8B,CAE9B,cAAe,CAEf,UAAW,CAEX,SAEF,CAEA,UACE,YAAa,CACb,oBAAqB,CACrB,gBACF,CAIA,YACE,aACF,CAGA,+BACE,wBACF,CAEA,eACE,aACF,CAEA,kBACE,qBACF,CAKA,yBAGE,UACE,iBACF,CACF,CAEA,yBAGE,WACE,cACF,CACF,CC3EA,cAEE,WAAY,CADZ,kBAAmB,CAEnB,cAAe,CACf,eAAiB,CACjB,WACF,CAEA,qBACE,iCAA0B,CAA1B,yBACF,CAEA,yCACE,8BACF,CAEA,yCACE,+BACF,CAEA,cAEE,iBAAkB,CADlB,eAAgB,CAEhB,UACF,CAEA,WACE,aAAc,CACd,cACF,CAEA,eAEE,WAAY,CADZ,eAAgB,CAEhB,cAAe,CACf,eAAiB,CACjB,WAAY,CACZ,eAEF,CAEA,oBACE,qBAAsB,CAEtB,QAAO,CAGP,eAAgB,CAChB,mBAEF,CAEA,+CACI,YACJ,CAEA,0BACE,WAAY,CACZ,qBAAsB,CAEtB,eAAgB,CAChB,WAAY,CACZ,YAAa,CACb,cAAe,CACf,UAEF,CAEA,2DACE,iBAEF,CAHA,6CACE,iBAEF,CAEA,iEACI,uBAAwB,CACxB,eACJ,CAEA,0BACE,YAAa,CAEb,eAAiB,CACjB,eAAgB,CAChB,aAAc,CACd,wBAAyB,CACzB,wBACF,CAEA,qBACE,eAAgB,CAChB,cACF,CAEA,eACE,2BAA4B,CAC5B,4BACF,CAEA,iBACE,YAAa,CACb,UACF,CAEA,cACE,QAAO,CACP,oBACF,CAEA,qBACE,4CAEE,wBACF,CAIA,iDAEE,wBAAyB,CACzB,cACF,CAPF,CAWA,kBACE,aACF,CAEA,gBACE,aACF,CAEA,qBAWE,2GACE,wBACF,CAPF,CAaA,yBACE,yCACE,8BACF,CAEA,yCACE,+BACF,CAEA,eACE,WACF,CAEA,oBACE,qBAAsB,CAEtB,cAAe,CACf,sBAA4B,CAE5B,UAEF,CAEA,eACE,2BAA4B,CAC5B,4BACF,CAEA,cACE,kBACF,CACF,CAEA,yBACE,qBACE,eACF,CACF,CC5LA,qBACE,8BAA+B,CAC/B,+BAAgC,CAChC,iBAAkB,CAClB,QAAO,CACP,iBACF,CAEA,gBACE,eAAgB,CAChB,WAAY,CACZ,aAAc,CACd,cAAe,CACf,YAAa,CACb,eAAgB,CAChB,SACF,CAEA,YACE,eAAgB,CAChB,gBACF,CAEA,kBACE,YAAa,CACb,QAAO,CACP,qBAAsB,CACtB,cAAe,CAEf,UACF,CAEA,2BACE,kBAAmB,CACnB,YAAa,CAGb,QAAO,CAFP,qBAAsB,CAItB,sBAAuB,CACvB,gBAAiB,CAIjB,eAAgB,CAChB,iBAEF,CAEA,iBACE,kBAAmB,CACnB,2BAA4B,CAC5B,4BAA6B,CAC7B,YAAa,CAEb,wBACF,CAEA,uBAEE,QACF,CAEA,YACE,wBAAyB,CAEzB,WAAY,CADZ,iBAAkB,CAElB,cAAe,CACf,cAAe,CACf,eAAiB,CACjB,gBAAiB,CACjB,YACF,CAEA,mBACE,gBAAiB,CAEjB,eAEF,CAEA,qBAGE,kBACE,wBAAyB,CACzB,cACF,CACF,CAEA,mBACE,iCAA0B,CAA1B,yBACF,CAIA,qBACE,4BACE,mBACF,CAGA,yBACE,wBACF,CACF,CAKA,yBACE,2BACE,qBAAsB,CAEtB,UAAS,CAET,gBAAiB,CACjB,UACF,CACF,CAGA,yBACE,YACE,eAEF,CAEA,aACE,iBAEF,CACF,CAEA,yBACE,YACE,cACF,CACF,CAEA,yBACE,WACE,iBACF,CACF,CAEA,yBAGE,aACE,cACF,CACF,CCxJA,kBACE,iBAAkB,CAClB,QAAS,CACT,YAAa,CACb,cAAe,CACf,OAAQ,CACR,yBAAkB,CAAlB,iBACF,CAEA,oBACE,UAAY,CACZ,QACF,CCZA,cACE,WAAY,CACZ,UACF,CAEA,WACE,QAAO,CAEP,gBAAiB,CAIjB,mBAAsB,CACtB,iBAEF,CAEA,iBACE,SAAU,CACV,iBAAkB,CAClB,SACF,CAEA,UACE,cAAe,CACf,oBACF,CAIA,0BACE,iBACE,SACF,CACF,CAEA,0BACE,WACE,mBACF,CACF,CAEA,0BACE,WACE,mBACF,CAEA,iBACE,UACF,CACF,CAEA,0BACE,WACE,mBACF,CAEA,iBACE,UAAW,CACX,SACF,CACF,CAEA,0BACE,iBACE,SAAU,CACV,SACF,CACF,CAEA,0BACE,iBACE,SACF,CACF,CAEA,0BACE,iBACE,SACF,CACF,CAEA,0BACE,WACE,oBACF,CAEA,iBACE,SAAU,CACV,SACF,CACF,CAEA,0BACE,iBACE,SACF,CACF,CAEA,yBACE,WACE,wBACF,CAEA,iBACE,SAAU,CACV,SACF,CACF,CAEA,yBACE,iBACE,SACF,CACF,CAEA,yBACE,iBACE,SACF,CACF,CAEA,yBACE,WACE,aAAc,CAGd,SAAU,CAEV,UAEF,CAEA,iBACE,QAAS,CACT,SACF,CACF,CAEA,yBACE,iBACE,UAAW,CACX,iBAAkB,CAClB,QACF,CACF,CCjJA,mBACE,YAAa,CAEb,QAAO,CACP,qBAAsB,CAGtB,qBAAuB,CAEvB,eAAgB,CAEhB,YAGF,CAEA,yBAGE,mBACE,eACF,CACF,CAEA,yBAGE,mBACE,eACF,CACF,CC9BA,WACE,kBAAmB,CACnB,UAAW,CACX,QAAS,CACT,cAAe,CACf,cAAe,CACf,OAAQ,CACR,iCAA0B,CAA1B,yBACF,CAEA,YAGE,eAAgB,CAChB,YAAa,CAGb,OAAQ,CAER,yBAAkB,CAAlB,iBAAkB,CAClB,SACF,CAEA,+BAZE,iBAAkB,CAClB,QAAS,CAIT,cAAe,CAEf,iCAA0B,CAA1B,yBAaF,CARA,mBAEE,UAAW,CAEX,cAAe,CAEf,OAEF,CC/BA,gBACE,iBAEF,CAEA,eACE,eACF,CAEA,SAEE,qBAAuB,CADvB,iBAAkB,CAElB,UAAW,CACX,YAAa,CAEb,cAAe,CACf,SAAU,CACV,eAAgB,CAChB,gBAAiB,CACjB,iBAAkB,CAElB,mBAAoB,CAEpB,SACF,CAGA,iBACE,yBAAkB,CAAlB,iBACF,CAEA,+CAGE,eAEF,CAgBA,8IACE,cACF,CAOA,kCACE,WACF,CAEA,oBACE,WACF,CAGA,WACE,iBAAkB,CAClB,cACF,CAEA,0BACE,eACF,CAKA,0BACE,kBACE,QACF,CACF,CAGA,yBAEE,+CAGE,UAAW,CACX,QACF,CACF,CAEA,yBAEE,8BAEE,WACF,CAEA,iBACE,UACF,CACF,CAGA,yBAEE,sDAGE,UACF,CAEA,mBACE,yBAAkB,CAAlB,iBACF,CACF,CAIA,yBACE,mBACE,UACF,CACF,CCnIA,UACE,0BAAmB,CAAnB,kBAAmB,CACnB,6BAAsB,CAAtB,qBAAsB,CACtB,oCAA6B,CAA7B,4BAA6B,CAC7B,8BAAuB,CAAvB,sBACF,CAEA,SACE,yCAAkC,CAAlC,iCAAkC,CAClC,aAAc,CACd,eACF,CAEA,2BACE,GACE,SACF,CAEA,GACE,SACF,CACF,CARA,mBACE,GACE,SACF,CAEA,GACE,SACF,CACF,CAEA,wBACE,GACE,8BAAuB,CAAvB,sBACF,CAEA,GACE,+BAAyB,CAAzB,uBACF,CACF,CARA,gBACE,GACE,8BAAuB,CAAvB,sBACF,CAEA,GACE,+BAAyB,CAAzB,uBACF,CACF,CC/BA,gBACE,kBAAmB,CACnB,YAAa,CACb,qBAAsB,CACtB,WACF,CAEA,aACE,aACF,CAEA,SACE,YAAa,CACb,sBAEF,CAEA,kBACE,YAAa,CACb,qBAAsB,CACtB,eAAgB,CAEhB,iBACF,CAEA,kBACE,iBAEF,CAEA,oBACE,eAAgB,CAChB,eAAiB,CACjB,oBACF,CAEA,yCAEE,UACF,CAEA,qBACE,aACF,CAIA,2BACE,aACF,CAEA,uDAEE,aACF","sources":["index.css","Components/DarkButton/DarkButton.css","Components/Navbar/Navbar.css","Components/QueryFormContainer/QueryFormContainer.css","Components/SolutionsDisplayContainer/SolutionsDisplayContainer.css","Components/NoSolutionsModal/NoSolutionsModal.css","Components/CubePanel/CubePanel.css","Components/Solve/Solve.css","Common/Popups.css","Common/Tooltips.css","Common/animation.css","Components/Documentation/Documentation.css"],"sourcesContent":["body {\n  /* react boilerplate */\n  margin: 0;\n  padding: 0;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  /* my styling */\n  -webkit-tap-highlight-color: transparent;\n  /* remove blue flash on some responsive sites */\n  background-color: #121212;\n  font-family: 'Poppins', sans-serif;\n  font-size: 15px;\n  font-weight: 500;\n}\n\nbutton {\n  /* override user style sheet */\n  letter-spacing: 0.01rem;\n}\n\n/* react boilerplate */\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n    monospace;\n}\n\n::selection {\n  background-color: #5e81a8;\n  color: #e4e4e4;\n}\n\n.accentColor {\n  background-color: #926ac3;\n}\n\n.errorColor {\n  background-color: #cf6679;\n  color: black;\n}\n\n.mainColor {\n  background-color: #1e1e1e;\n}\n\n.mainText {\n  color: #e4e4e4;\n}\n\n.secondaryColor {\n  background-color: #222;\n}\n\n.topHalf {\n  display: flex;\n  /* ? top half can be removed and just the items are used */\n  flex: 1;\n  /* the top half will occupy 1/2 of the solvePageMinusNav height */\n}\n\n#root {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  /* root should always take full VH unless the content overflows it such as small screens for the solve page, or the documentation page, which will cause scrollbars */\n}\n\n/** light mode */\n\nbody.light {\n  background-color: #fff;\n}\n\n.light .accentColor {\n  background-color: #6200ee;\n}\n\n.light .errorColor {\n  background-color: #b00020;\n  color: white;\n}\n\n.light .mainColor {\n  background-color: #e7e7e7;\n}\n\n.light .mainText {\n  color: #313131;\n}\n\n.light .secondaryColor {\n  background-color: #f2f2f2;\n}\n\n/** media queries */\n@media (min-width: 768px) {\n\n  /* in the normal side by side view, prevent the cube from growing by limiting .topHalf */\n  .topHalf {\n    max-height: 450px;\n  }\n}\n\n@media (max-width: 767px) {\n  .topHalf {\n    align-items: center;\n    /* top half should be center on a mobile view */\n    flex-direction: column;\n    /* flex the queryFormContainer and cubePanel vertically */\n    flex: 1;\n    /* top half takes up more space compared to solutions display when in vertical flex mode */\n    max-height: 700px;\n    /* in the stacked few, prevent the cube from becoming too big */\n    width: 100%;\n    /* top half should now fill the width of the wholePageMinusNavbar div */\n  }\n}\n\n\n/** TODO: repaint whole window question */",".darkButton {\n  align-items: center;\n  background-color: #efc523;\n  border: none;\n  border-radius: 3px;\n  box-sizing: border-box;\n  color: #0F0F0F;\n  display: flex;\n  height: 43px;\n  justify-content: center;\n  margin-right: 2vw;\n  padding: 0;\n  width: 43px;\n}\n\n.darkButton:hover {\n  cursor: pointer;\n  background-color: #dab523;\n}\n\n.light .darkButton {\n  background-color: #191970;\n  color: #f3f1fe;\n}\n\n.light .darkButton:hover {\n  background-color: #101045;\n}\n\n@media (max-width: 850px) {\n  .darkButton {\n    margin-right: 4vw;\n  }\n}\n\n@media (max-width: 300px) {\n  .darkButton {\n    height: 37.5px;\n    width: 37.5px;\n  }\n}","li a {\n  color: white;\n  display: block;\n  padding: 10px 15px;\n  text-align: center;\n  text-decoration: none;\n}\n\n/* don't need to handle sticky hover for mobile, as when we click on a page in mobile it will always change to be active */\nli a:hover:not(.active) {\n  background-color: #1e1e1e;\n}\n\n.active {\n  color: #0f0f0f;\n}\n\n.navbarDiv {\n  align-items: center;\n  /* center the toggle */\n  background-color: #121212;\n  /* set color so when scrolling the navbar is not see through */\n  display: flex;\n  justify-content: space-between;\n  /* navbar contains the UL and the toggle so this spaces them out */\n  position: fixed;\n  /* make navbar stay on the top, particularly for documentation page */\n  width: 100%;\n  /* expand to width of the page */\n  z-index: 1;\n  /* scramble circle icon would appear above when scrolled otherwise */\n}\n\n.navbarUl {\n  display: flex;\n  list-style-type: none;\n  padding-left: 3vw;\n}\n\n\n/** light mode */\n.light li a {\n  color: #313131;\n}\n\n/* don't need to handle sticky hover for mobile, as when we click on a page in mobile it will always change to be active */\n.light li a:hover:not(.active) {\n  background-color: #d6d3d3;\n}\n\n.light .active {\n  color: #f3f1fe;\n}\n\n.light .navbarDiv {\n  background-color: #fff;\n}\n\n\n/** media queries */\n\n@media (max-width: 372px) {\n\n  /* on very thin screens make the nav elements closer together */\n  .navbarUl {\n    padding-left: 10px;\n  }\n}\n\n@media (max-width: 300px) {\n\n  /* the navbar text is too big */\n  .navbarDiv {\n    font-size: 12px;\n  }\n}",".bottomButton {\n  border-radius: 15px;\n  border: none;\n  cursor: pointer;\n  font-weight: bold;\n  height: 50px;\n}\n\n.bottomButton:active {\n  transform: translateY(5px);\n}\n\n.buttonGrid>.movesetButton:nth-child(13) {\n  border-bottom-left-radius: 20px;\n}\n\n.buttonGrid>.movesetButton:nth-child(18) {\n  border-bottom-right-radius: 20px;\n}\n\n.cancelButton {\n  margin-top: 10px;\n  margin-right: 10px;\n  width: 80px;\n}\n\n.isToggled {\n  color: #0f0f0f;\n  transition: 0.2s;\n}\n\n.movesetButton {\n  border-radius: 0;\n  border: none;\n  cursor: pointer;\n  font-weight: bold;\n  height: 30px;\n  width: calc(100% / 6);\n  /* take 1/6th of the button grid which is a blocking div inside the queryFormContainer */\n}\n\n.queryFormContainer {\n  box-sizing: border-box;\n  /* make the width capped at true 650px including padding */\n  flex: 1;\n  /* take up half of the width (but get capped via max width),\n  or half of height (but get capped via .topHalf max height) */\n  max-width: 650px;\n  padding: 50px 0 0 5%;\n  /* large screen positionings */\n}\n\n.queryFormContainer button:active, button:focus { /* turn off default button outline on android */\n    outline: none;\n}\n\n.queryFormContainer input {\n  border: none;\n  box-sizing: border-box;\n  /* make it true 100% width */\n  font-weight: 600;\n  height: 50px;\n  outline: none;\n  padding: 0 35px;\n  width: 100%;\n  /* expand to fill full queryFormContainer */\n}\n\n.queryFormContainer input:focus::placeholder {\n  color: transparent;\n  /* make the placeholder disappear when clicked in */\n}\n\n.queryFormContainer input:not([type=\"radio\"]):not([type=\"checkbox\"]) { /* remove rounded corners on inputs for ios */\n    -webkit-appearance: none;\n    border-radius: 0;\n}\n\n.queryFormContainer label {\n  display: flex;\n  /* this also makes the width of the label 100% since labels are not by default */\n  font-size: 0.8rem;\n  font-weight: 600;\n  line-height: 2;\n  padding: 10px 0 10px 20px;\n  text-transform: uppercase;\n}\n\n.randomExampleButton {\n  margin-top: 10px;\n  padding: 0 12px;\n}\n\n.scrambleLabel {\n  border-top-left-radius: 20px;\n  border-top-right-radius: 20px;\n}\n\n.submitAndCancel {\n  display: flex;\n  width: 100%;\n}\n\n.submitButton {\n  flex: 1;\n  margin: 10px 10px 0 0;\n}\n\n@media (hover: hover) {\n  .queryFormContainer input:hover:not(:focus) {\n    /* get rid of sticky hover when clicking in a field on mobile */\n    background-color: #4c4c4c;\n  }\n}\n\n@media (hover: hover) {\n  .queryFormContainer button:hover:not(.isToggled) {\n    /* get rid of sticky hover when clicking in a field on mobile */\n    background-color: #4c4c4c;\n    transition: 0.2s;\n  }\n}\n\n/** light mode */\n.light .isToggled {\n  color: #f3f1fe;\n}\n\n.light .spinner {\n  color: #313131;\n}\n\n@media (hover: hover) {\n\n  /* get rid of sticky hover when clicking in a field on mobile */\n  .light .queryFormContainer button:hover:not(.isToggled) {\n    background-color: #d6d3d3;\n  }\n}\n\n@media (hover: hover) {\n\n  /* get rid of sticky hover when clicking in a field on mobile */\n  .light .queryFormContainer input:hover:not(:focus) {\n    background-color: #d6d3d3;\n  }\n}\n\n\n/** media queries */\n\n@media (max-width: 767px) {\n  .buttonGrid>.movesetButton:nth-child(13) {\n    border-bottom-left-radius: 10px;\n  }\n\n  .buttonGrid>.movesetButton:nth-child(18) {\n    border-bottom-right-radius: 10px;\n  }\n\n  .movesetButton {\n    height: 40px;\n  }\n\n  .queryFormContainer {\n    box-sizing: border-box;\n    /* changing the sizing style since the padding is a more significant part of the screen width, this is easier to work with */\n    max-width: none;\n    padding: 15px 10px 10px 10px;\n    /* move query form up to use extra space */\n    width: 100%;\n    /* once we flex vertically, fill the whole screen */\n  }\n\n  .scrambleLabel {\n    border-top-left-radius: 10px;\n    border-top-right-radius: 10px;\n  }\n\n  .submitButton {\n    border-radius: 10px;\n  }\n}\n\n@media (max-width: 500px) {\n  .randomExampleButton {\n    max-width: 120px;\n  }\n}",".scrollableSolutions {\n  border-bottom-left-radius: 10px;\n  border-bottom-right-radius: 10px;\n  color-scheme: dark;\n  flex: 1;\n  overflow-y: scroll;\n}\n\n.solutionButton {\n  background: none;\n  border: none;\n  color: inherit;\n  cursor: pointer;\n  font: inherit;\n  outline: inherit;\n  padding: 0;\n}\n\n.solutionLi {\n  line-height: 2.5;\n  margin-left: 30px;\n}\n\n.solutionsDisplay {\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  max-height: 95%;\n  /* take up 95% of the container */\n  width: 100%;\n}\n\n.solutionsDisplayContainer {\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  /* ? can use a non-flexbox */\n  flex: 1;\n  /* the solutionsDisplayContainer will flex 1/2 of the solvePageMinusNav height */\n  justify-content: center;\n  min-height: 145px;\n  /* this allows the container to shrink somewhat as height is not set otherwise,\n  but it caps out at a certain point, so the scrollable solutions is visible */\n  padding: 0;\n  padding: 25px 5%;\n  position: relative;\n  /* allows for positioning of the CopyPopup */\n}\n\n.solutionsHeader {\n  align-items: center;\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n  display: flex;\n  padding: 5px;\n  padding-left: 15px;\n}\n\n.solutionsHeaderSpacer {\n  /* horizontal spacer in the header to push sort buttons to the right */\n  flex: 1;\n}\n\n.sortButton {\n  background-color: inherit;\n  border-radius: 8px;\n  border: none;\n  cursor: pointer;\n  font-size: 12px;\n  font-weight: bold;\n  margin-right: 8px;\n  padding: 10px;\n}\n\n.solutionLi button {\n  margin-left: 10px;\n  /* add some spacing between the solution and number */\n  text-align: left;\n  /* when solutions go on two lines this keeps it lined up */\n}\n\n@media (hover: hover) {\n\n  /* get rid of sticky hover when clicking in a field on mobile */\n  .sortButton:hover {\n    background-color: #4c4c4c;\n    transition: 0.2s;\n  }\n}\n\n.sortButton:active {\n  transform: translateY(5px);\n}\n\n/** light mode */\n\n@media (hover: hover) {\n  .light .scrollableSolutions {\n    color-scheme: normal;\n  }\n\n  /* get rid of sticky hover when clicking in a field on mobile */\n  .light .sortButton:hover {\n    background-color: #d6d3d3;\n  }\n}\n\n\n\n/** media queries */\n@media (max-width: 767px) {\n  .solutionsDisplayContainer {\n    box-sizing: border-box;\n    /* changing the sizing style since the padding is a more significant part of the screen width, this is easier to work with */\n    flex: 0.5;\n    /* takes up 1/3rd of the solvePageMinusNav, allowing the cube visual to have enough room */\n    padding: 5px 10px;\n    width: 100%;\n  }\n}\n\n/* most phones should take this form */\n@media (max-width: 481px) {\n  .solutionLi {\n    margin-left: 5px;\n    /* in mobile view move the solutions to the left, but still let 2 digit number solutions fit */\n  }\n\n  .solutionsOl {\n    padding-left: 25px;\n    /* move the numbers a bit closer to the left */\n  }\n}\n\n@media (max-width: 345px) {\n  .sortButton {\n    margin-right: 0;\n  }\n}\n\n@media (max-width: 320px) {\n  .qtmButton {\n    margin-right: -5px;\n  }\n}\n\n@media (max-width: 280px) {\n\n  /* prevent scrollbars from showing in scrollable soltuions on very narrow screens */\n  .solutionsOl {\n    margin-top: 5px;\n  }\n}",".noSolutionsModal {\n  border-radius: 5px;\n  left: 45%;\n  padding: 10px;\n  position: fixed;\n  top: 45%;\n  width: max-content;\n}\n\n.noSolutionsModal p {\n  color: white;\n  margin: 0;\n}","twisty-player {\n  height: 100%;\n  width: 100%;\n}\n\n.cubePanel {\n  flex: 1;\n  /* fill out the width since cubePanel will get capped, in height mode keep expanding until .topHalf caps the height */\n  min-height: 100px;\n  /* normally the cube expands or shrinks to fill the remainder of the page, for small phones we don't want the cube to keep shrinking, we would rather scroll.\n  By adding a minimum height, the sum of heights of our content will overflow the 100vh\n  height allowing for the scroll effect. */\n  padding: 15px 0 35px 0;\n  position: relative;\n  /* to position drag cube to view icon and text */\n}\n\n.dragIconAndText {\n  bottom: 8%;\n  position: absolute;\n  right: 15%;\n}\n\n.dragText {\n  cursor: default;\n  display: inline-block;\n}\n\n/** moving around cube, drag icon, and text */\n\n@media (max-width: 1690px) {\n  .dragIconAndText {\n    right: 10%;\n  }\n}\n\n@media (max-width: 1600px) {\n  .cubePanel {\n    padding: 25px 0 45px 0;\n  }\n}\n\n@media (max-width: 1560px) {\n  .cubePanel {\n    padding: 40px 0 60px 0;\n  }\n\n  .dragIconAndText {\n    bottom: 12%;\n  }\n}\n\n@media (max-width: 1430px) {\n  .cubePanel {\n    padding: 60px 0 80px 0;\n  }\n\n  .dragIconAndText {\n    bottom: 14%;\n    right: 10%;\n  }\n}\n\n@media (max-width: 1340px) {\n  .dragIconAndText {\n    bottom: 3%;\n    right: 37%;\n  }\n}\n\n@media (max-width: 1280px) {\n  .dragIconAndText {\n    right: 36%;\n  }\n}\n\n@media (max-width: 1230px) {\n  .dragIconAndText {\n    right: 35%;\n  }\n}\n\n@media (max-width: 1100px) {\n  .cubePanel {\n    padding: 80px 0px 100px 0px;\n  }\n\n  .dragIconAndText {\n    bottom: 6%;\n    right: 34%;\n  }\n}\n\n@media (max-width: 1030px) {\n  .dragIconAndText {\n    right: 33%;\n  }\n}\n\n@media (max-width: 940px) {\n  .cubePanel {\n    padding: 100px 20px 120px 20px;\n  }\n\n  .dragIconAndText {\n    bottom: 9%;\n    right: 32%;\n  }\n}\n\n@media (max-width: 870px) {\n  .dragIconAndText {\n    right: 31%;\n  }\n}\n\n@media (max-width: 820px) {\n  .dragIconAndText {\n    right: 30%;\n  }\n}\n\n@media (max-width: 767px) {\n  .cubePanel {\n    flex-shrink: 1;\n    /* once the components are stacked vertically, allow the cube to shrink to less than 50% of the height.\n    This is needed as the queryForm is fixed height and the cube will otherwise be hardcoded at 50% */\n    padding: 0;\n    /* make room for cube on smaller screen */\n    width: 100%;\n    /* width was not defined in laptop view */\n  }\n\n  .dragIconAndText {\n    bottom: 0;\n    right: 10%;\n  }\n}\n\n@media (max-width: 481px) {\n  .dragIconAndText {\n    bottom: -3%;\n    position: absolute;\n    right: 6%;\n  }\n}",".solvePageMinusNav {\n  display: flex;\n  /* the whole page contains the topHalf and bottomHalf, it will be a flex container to flex these two children vertically. The whole page should have a flex of 1, to take up any remaining space that the navbar does not occupy. */\n  flex: 1;\n  flex-direction: column;\n  /* occupy the full height of the root except for the fixed navbar. Due to minimum heights, the solvePageMinusNav will\n  eventually overflow the viewport and allow the user to scroll. */\n  letter-spacing: 0.01rem;\n  /* override user style sheet */\n  margin-top: 50px;\n  /* since the navbar is taken out of flow with position: fixed; this pushes the elements down, repeated section for clarity */\n  min-height: 0;\n  /* since this doesn't have an assigned height, we need to stop protecting its children and allow it to shrink */\n  /* https://codepen.io/Sean713/pen/PoBZKbP */\n}\n\n@media (max-width: 767px) {\n\n  /* when the top half stacks vertically, move all the elements down a bit */\n  .solvePageMinusNav {\n    margin-top: 60px;\n  }\n}\n\n@media (max-width: 300px) {\n\n  /* the navbar text is too big */\n  .solvePageMinusNav {\n    margin-top: 50px;\n  }\n}",".copyPopup {\n  border-radius: 10px;\n  color: #fff;\n  left: 50%;\n  padding: 0 10px;\n  position: fixed;\n  top: 50%;\n  transform: translate(-50%);\n}\n\n.errorPopup {\n  border-radius: 5px;\n  left: 50%;\n  max-width: 300px;\n  padding: 10px;\n  position: fixed;\n  position: fixed;\n  top: 55%;\n  transform: translate(-50%);\n  width: max-content;\n  z-index: 1;\n}\n\n.movesetPopupError {\n  border-radius: 5px;\n  color: #fff;\n  left: 50%;\n  padding: 0 10px;\n  position: fixed;\n  top: 50%;\n  transform: translate(-50%);\n}",".iconAndTooltip {\n  position: relative;\n  /* allows positioning for tooltip */\n}\n\n.solutionsIcon {\n  margin-left: 4px;\n}\n\n.tooltip {\n  border-radius: 5px;\n  border: 1px solid black;\n  color: #fff;\n  display: none;\n  /* by default do not show or take up space */\n  font-size: 14px;\n  left: 30px;\n  line-height: 1.5;\n  padding: 5px 10px;\n  position: absolute;\n  /* positioned relative to the .iconAndTooltip */\n  text-transform: none;\n  /* override all caps that came from the labels */\n  z-index: 1;\n}\n\n/* needed to handle the scramble as we don't want that to split into two lines */\n.scrambleTooltip {\n  width: max-content;\n}\n\n.scrambleTooltip,\n.depthTooltip,\n.movesetTooltip {\n  font-weight: 500;\n  /* override label font-weight */\n}\n\n/* make all tooltips visible on hover, display type does not really matter\non mobile, these function as buttons due to sticky hover */\n.depthIcon:hover+.depthTooltip {\n  display: inline;\n}\n\n.movesetIcon:hover+.movesetTooltip {\n  display: inline;\n}\n\n.scrambleIcon:hover+.scrambleTooltip {\n  display: inline;\n}\n\n.solutionsIcon:hover+.solutionsTooltip {\n  display: inline;\n}\n\n/* base widths for the other tooltip, the tooltip will not tightly wrap the p element as you need JS for that */\n.movesetTooltip p {\n  width: 250px;\n}\n\n.depthTooltip p {\n  width: 250px;\n}\n\n.solutionsTooltip p {\n  width: 305px;\n}\n\n/* add some margins between p tags for spacing */\n.tooltip p {\n  margin-bottom: 3px;\n  margin-top: 3px;\n}\n\n.queryFormContainer .icon {\n  margin-left: 4px;\n}\n\n/** media queries */\n\n/* when the screen is short enough make the tooltip appear above not below */\n@media (max-height: 700px) {\n  .solutionsTooltip {\n    bottom: 0;\n  }\n}\n\n/* start to move over tooltips when width shrinnks */\n@media (max-width: 525px) {\n\n  .scrambleTooltip,\n  .depthTooltip,\n  .movesetTooltip {\n    left: -50px;\n    top: 20px;\n  }\n}\n\n@media (max-width: 460px) {\n\n  .depthTooltip,\n  .movesetTooltip {\n    left: -120px;\n  }\n\n  .scrambleTooltip {\n    left: -70px;\n  }\n}\n\n/* when near phone widths we reduce tooltips to a % of the screen, not yet needed for scramble */\n@media (max-width: 420px) {\n\n  .depthTooltip p,\n  .movesetTooltip p,\n  .solutionsTooltip p {\n    width: 50vw;\n  }\n\n  .scrambleTooltip p {\n    width: max-content;\n  }\n}\n\n/* at very thin views concede the max-width: content which was set to allow the scramble\nto appear on one line */\n@media (max-width: 330px) {\n  .scrambleTooltip p {\n    width: 50vw;\n  }\n}",".fade-out {\n  animation-delay: 1s;\n  animation-duration: 1s;\n  animation-fill-mode: forwards;\n  animation-name: fadeOut;\n}\n\n.spinner {\n  animation: spin infinite 2s linear;\n  color: #e4e4e4;\n  margin-left: 5px;\n}\n\n@keyframes fadeOut {\n  0% {\n    opacity: 1;\n  }\n\n  100% {\n    opacity: 0;\n  }\n}\n\n@keyframes spin {\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n}",".cubeAndCaption {\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n}\n\n.cubePicture {\n  max-width: 70%;\n}\n\n.cubeRow {\n  display: flex;\n  justify-content: center;\n  /* width is forced to max since the document flexes vertically */\n}\n\n.documentationDiv {\n  display: flex;\n  flex-direction: column;\n  margin-top: 70px;\n  /* since the navbar is taken out of flow with position: fixed; this pushes the elements down */\n  padding: 0px 4% 40px 4%;\n}\n\n.cubeAndCaption p {\n  text-align: center;\n  /* p may be aligned within cubeAndCaption, but the text inside isn't, this is needed for when the caption is too long as per tony's explanation */\n}\n\n.documentationDiv a {\n  color: #bb86fcc2;\n  font-weight: bold;\n  text-decoration: none;\n}\n\n.documentationDiv h2,\n.documentationDiv p {\n  color: white;\n}\n\n.documentationDiv hr {\n  margin: 30px 0;\n}\n\n\n/** light mode */\n.light .documentationDiv a {\n  color: #6200ee;\n}\n\n.light .documentationDiv h2,\n.light .documentationDiv p {\n  color: #313131;\n}"],"names":[],"sourceRoot":""}