{"version":3,"file":"static/css/main.fd0d7c8b.css","mappings":"AAAA,cACE,WAAY,CACZ,UACF,CAEA,WACE,qBAAsB,CAEtB,QAAO,CAGP,gBAAiB,CADjB,gBAAiB,CAEjB,mBAAsB,CAEtB,iBACF,CAEA,iBACE,SAAU,CACV,mBAAoB,CACpB,iBAAkB,CAClB,SACF,CAEA,UACE,cAAe,CACf,YACF,CAKA,wBACE,eACE,oBACF,CACF,CAEA,0BACE,iBACE,SACF,CACF,CAEA,0BACE,WACE,mBACF,CACF,CAEA,0BACE,WACE,mBACF,CAEA,iBACE,UACF,CACF,CAEA,0BACE,WACE,mBACF,CAEA,iBACE,UAAW,CACX,SACF,CACF,CAEA,0BACE,iBACE,SAAU,CACV,SACF,CACF,CAEA,0BACE,iBACE,SACF,CACF,CAEA,0BACE,iBACE,SACF,CACF,CAEA,0BACE,WACE,oBACF,CAEA,iBACE,SAAU,CACV,SACF,CACF,CAEA,0BACE,iBACE,SACF,CACF,CAEA,yBACE,WACE,wBACF,CAEA,iBACE,SAAU,CACV,SACF,CACF,CAEA,yBACE,iBACE,SACF,CACF,CAEA,yBACE,iBACE,SACF,CACF,CAEA,yBACE,WAEE,aAAc,CAEd,SAAU,CAEV,UACF,CAEA,iBACE,QAAS,CACT,SACF,CACF,CAEA,+CACE,gBACE,oBACF,CACF,CAEA,yBACE,iBACE,UAAW,CACX,iBAAkB,CAClB,QACF,CACF,CAEA,wBACE,eACE,oBACF,CACF,CCpKA,OACE,iBAAkB,CAClB,yEAA2F,CAC3F,QAAS,CAET,aAAc,CACd,cAAe,CACf,cAAe,CACf,iBAAkB,CAClB,OAAQ,CACR,sCAAgC,CAAhC,8BAAgC,CAChC,yBAAkB,CAAlB,iBAAkB,CAClB,SACF,CCbA,eAEE,YAAa,CACb,4BAA6B,CAF7B,eAGF,CAGA,cACE,kBACF,CAGA,WACE,6BAAuB,CAAvB,qBACF,CAEA,cACE,8DACF,CAEA,iBACE,cAAe,CACf,gBAAiB,CACjB,eAAkB,CAClB,iBACF,CAEA,aACE,WAAY,CACZ,kBAAmB,CACnB,aAAc,CACd,cAAe,CAGf,8BAAkC,CAClC,cAAe,CACf,eAAg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","sources":["Components/CubePanel/CubePanel.css","Components/GenericPopup/GenericPopup.css","Components/LandingModal/LandingModal.css","Components/NoSolutionsModal/NoSolutionsModal.css","Components/QueryFormContainer/QueryFormContainer.css","Components/SolutionsDisplayContainer/SolutionsDisplayContainer.css","commonCss/tooltips.css","commonCss/animation.css","Components/Solve/Solve.css","Components/Faq/Faq.css","Components/Navbar/DarkButton/DarkButton.css","Components/Navbar/Navbar.css","index.css"],"sourcesContent":["twisty-player {\n  height: 100%;\n  width: 100%;\n}\n\n.cubePanel {\n  box-sizing: border-box;\n  /* fill out the width since cubePanel will get capped, in height mode keep expanding until .topHalf caps the height */\n  flex: 1;\n  /* normally the cube expands or shrinks to fill the remainder of the page, for small phones we don't want the cube to keep shrinking, we would rather scroll. By adding a minimum height, the sum of heights of our content will overflow the 100vh height allowing for the scroll effect. */\n  min-height: 100px;\n  max-height: 450px;\n  padding: 15px 0 35px 0;\n  /* to position drag cube to view icon and text */\n  position: relative;\n}\n\n.dragIconAndText {\n  bottom: 8%;\n  pointer-events: none;\n  position: absolute;\n  right: 15%;\n}\n\n.dragText {\n  cursor: default;\n  display: none;\n}\n\n\n/** moving around cube, drag icon, and text */\n\n@media(min-width: 768px) {\n  .dragTextLarge {\n    display: inline-block;\n  }\n}\n\n@media (max-width: 1690px) {\n  .dragIconAndText {\n    right: 10%;\n  }\n}\n\n@media (max-width: 1600px) {\n  .cubePanel {\n    padding: 25px 0 45px 0;\n  }\n}\n\n@media (max-width: 1560px) {\n  .cubePanel {\n    padding: 40px 0 60px 0;\n  }\n\n  .dragIconAndText {\n    bottom: 12%;\n  }\n}\n\n@media (max-width: 1430px) {\n  .cubePanel {\n    padding: 60px 0 80px 0;\n  }\n\n  .dragIconAndText {\n    bottom: 14%;\n    right: 10%;\n  }\n}\n\n@media (max-width: 1340px) {\n  .dragIconAndText {\n    bottom: 3%;\n    right: 37%;\n  }\n}\n\n@media (max-width: 1280px) {\n  .dragIconAndText {\n    right: 36%;\n  }\n}\n\n@media (max-width: 1230px) {\n  .dragIconAndText {\n    right: 35%;\n  }\n}\n\n@media (max-width: 1100px) {\n  .cubePanel {\n    padding: 80px 0px 100px 0px;\n  }\n\n  .dragIconAndText {\n    bottom: 6%;\n    right: 34%;\n  }\n}\n\n@media (max-width: 1030px) {\n  .dragIconAndText {\n    right: 33%;\n  }\n}\n\n@media (max-width: 940px) {\n  .cubePanel {\n    padding: 100px 20px 120px 20px;\n  }\n\n  .dragIconAndText {\n    bottom: 9%;\n    right: 32%;\n  }\n}\n\n@media (max-width: 870px) {\n  .dragIconAndText {\n    right: 31%;\n  }\n}\n\n@media (max-width: 820px) {\n  .dragIconAndText {\n    right: 30%;\n  }\n}\n\n@media (max-width: 767px) {\n  .cubePanel {\n    /* once the components are stacked vertically, allow the cube to shrink to less than 50% of the height. This is needed as the queryForm is fixed height and the cube will otherwise be hardcoded at 50% */\n    flex-shrink: 1;\n    /* make room for cube on smaller screen */\n    padding: 0;\n     /* width was not defined in laptop view */\n    width: 100%;\n  }\n\n  .dragIconAndText {\n    bottom: 0;\n    right: 10%;\n  }\n}\n\n@media (min-width: 361px) and (max-width: 767px) {\n  .dragTextMedium {\n    display: inline-block;\n  }\n}\n\n@media (max-width: 481px) {\n  .dragIconAndText {\n    bottom: -3%;\n    position: absolute;\n    right: 6%;\n  }\n}\n\n@media(max-width: 360px) {\n  .dragTextSmall {\n    display: inline-block;\n  }\n}",".popup {\n  border-radius: 5px;\n  box-shadow: rgba(14, 30, 37, 0.12) 0px 2px 4px 0px, rgba(14, 30, 37, 0.32) 0px 2px 16px 0px;\n  left: 50%;\n  /* this, and width: max-content; are needed because when we move the div via left: 50% and the screen is narrow, it wraps onto two lines since there is no room, then it moves left via the translate(-50%), so these two properties allow the text not to wrap until necessary */\n  max-width: 80%;\n  padding: 0 10px;\n  position: fixed;\n  text-align: center;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  width: max-content;\n  z-index: 1;\n}",".alignCheckBox {\n  margin-top: 20px;\n  display: flex;\n  justify-content: space-around;\n}\n\n/* specificity overrides .landingModal h2 */\n#canSolveCube {\n  margin-bottom: 24px;\n}\n\n/* override the react-floater property, this didn't seem accessible from the react-floater API, as removing shadow did not remove all of it */\n.__floater {\n  filter: none !important;\n}\n\n.landingModal {\n  box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\n}\n\n.landingModal h2 {\n  font-size: 20px;\n  line-height: 24px;\n  margin: 0 0 10px 0;\n  text-align: center;\n}\n\n.yesNoButton {\n  border: none;\n  border-radius: 10px;\n  color: #f3f1fe;\n  cursor: pointer;\n  padding: 0 15px;\n  /* needed due to user agent stylesheet override */\n  font-family: 'Poppins', sans-serif;\n  font-size: 16px;\n  font-weight: 600;\n  height: 40px;\n}\n\n.yesNoButton p {\n  margin: 0;\n}",".noSolutionsModal {\n  border-radius: 5px;\n  left: 45%;\n  padding: 10px;\n  position: fixed;\n  top: 45%;\n  width: max-content;\n}\n\n.noSolutionsModal p {\n  color: white;\n  margin: 0;\n}",".bottomButton {\n  border-radius: 15px;\n  border: none;\n  cursor: pointer;\n  /* needed due to user agent stylesheet override */\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  height: 50px;\n  /* so the ripple doesn't show outside the borders */\n  overflow: hidden;\n  padding: 0 12px;\n  /* for the ripple positioning */\n  position: relative;\n}\n\n.buttonGrid .movesetButton:nth-child(13) {\n  border-bottom-left-radius: 10px;\n}\n\n.buttonGrid .movesetButton:nth-child(18) {\n  border-bottom-right-radius: 10px;\n}\n\n.cancelButton {\n  margin-top: 5px;\n}\n\n.isToggled {\n  transition: 0.2s;\n}\n\n.movesetButton {\n  border-radius: 0;\n  border: none;\n  color: #757575;\n  cursor: pointer;\n  font-family: 'Poppins', sans-serif;\n  font-size: 14.66px;\n  font-weight: 500;\n  height: 34px;\n  /* take 1/6th of the button grid which is a blocking div inside the queryFormContainer */\n  width: calc(100% / 6);\n}\n\n.queryFormBorder {\n  border-radius: 10px;\n  margin-bottom: 20px;\n}\n\n.queryFormContainer {\n  /* make the width capped at true 650px including padding */\n  box-sizing: border-box;\n  /* take up half of the width (but get capped via max width), or half of height (but get capped via .topHalf max height) */\n  flex: 1;\n  max-width: 650px;\n  padding: 50px 0 0 5%;\n  /* large screen positionings */\n}\n\n/* turn off default button outline on android */\n.queryFormContainer button:active,\nbutton:focus {\n  outline: none;\n}\n\n.queryFormContainer input {\n  border: none;\n  /* make it true 100% width */\n  box-sizing: border-box;\n  /* needed due to user agent stylesheet override */\n  font-family: 'Poppins', sans-serif;\n  font-size: 16px;\n  font-weight: 500;\n  height: 50px;\n  outline: none;\n  padding: 0 35px;\n  /* expand to fill full queryFormContainer */\n  width: 100%;\n}\n\n.queryFormContainer input:focus::placeholder {\n  /* make the placeholder disappear when clicked in */\n  color: transparent;\n}\n\n/* remove rounded corners on inputs for ios */\n.queryFormContainer input:not([type=\"radio\"]):not([type=\"checkbox\"]) {\n  -webkit-appearance: none;\n  border-radius: 0;\n}\n\n.queryFormContainer label {\n  /* this also makes the width of the label 100% since labels are not by default */\n  display: flex;\n  /* needed due to user agent stylesheet override */\n  font-family: 'Poppins', sans-serif;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 2;\n  padding: 10px 0 10px 20px;\n  text-transform: uppercase;\n}\n\n.randomExampleButton {\n  margin-right: 12px;\n  margin-top: 5px;\n}\n\n.scrambleLabel {\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n}\n\n.submitAndCancelAndRandom {\n  display: flex;\n}\n\n/* override user agent stylesheet */\n.submitAndCancelAndRandom button {\n  font-size: 13.33px;\n}\n\n.submitButton {\n  align-items: center;\n  display: flex;\n  flex: 1;\n  justify-content: center;\n  margin: 5px 10px 0 0;\n  min-width: 90px;\n}\n\n.submitButton p {\n  line-height: 1.4;\n}\n\n@media (hover: hover) {\n  .cancelButton:hover {\n    background-color: #7d3b41;\n    transition: 0.2s;\n  }\n\n  .submitButton:hover,\n  .randomExampleButton:hover {\n    background-color: #3e5d87;\n    transition: 0.2s;\n  }\n\n  /* get rid of sticky hover when clicking in a field on mobile */\n  .queryFormContainer input:hover:not(:focus) {\n    background-color: #4c4c4c;\n  }\n\n  /* get rid of sticky hover when clicking in a field on mobile */\n  .queryFormContainer .movesetButton:hover:not(.isToggled) {\n    background-color: #4c4c4c;\n    transition: 0.2s;\n  }\n}\n\n/** light mode */\n.light .isToggled {\n  color: #f3f1fe;\n}\n\n.light .spinner {\n  color: #313131;\n}\n\n@media (hover: hover) {\n  .light .cancelButton:hover {\n    background-color: #782c2b;\n    transition: 0.2s;\n  }\n\n  /* get rid of sticky hover when clicking in a field on mobile */\n  .light .queryFormContainer .movesetButton:hover:not(.isToggled) {\n    background-color: #d6d3d3;\n  }\n\n  /* get rid of sticky hover when clicking in a field on mobile */\n  .light .queryFormContainer input:hover:not(:focus) {\n    background-color: #d6d3d3;\n  }\n\n  .light .submitButton:hover,\n  .light .randomExampleButton:hover {\n    background-color: #303F9F;\n    transition: 0.2s;\n  }\n}\n\n/** media queries */\n\n@media (max-width: 767px) {\n  .movesetButton {\n    height: 40px;\n  }\n\n  .queryFormContainer {\n    /* changing the sizing style since the padding is a more significant part of the screen width, this is easier to work with */\n    box-sizing: border-box;\n    max-width: none;\n    /* move query form up to use extra space */\n    padding: 30px 10px 10px 10px;\n    /* once we flex vertically, fill the whole screen */\n    width: 100%;\n  }\n\n  .submitButton {\n    border-radius: 10px;\n  }\n}\n\n@media (max-width: 500px) {\n  .randomExampleButton {\n    line-height: 1.5;\n    max-width: 120px;\n  }\n}\n\n@media (max-width: 300px) {\n  .bottomButton {\n    padding: 0 6px;\n  }\n}",".animateButton {\n  /* push the animate and copy buttons to the right */\n  margin-left: auto;\n}\n\n.animateButton,\n.copyButton {\n  background-color: #555;\n  border: none;\n  border-radius: 3px;\n  color: #e4e4e4;\n  cursor: pointer;\n  font-family: 'Poppins', sans-serif;\n  font-size: 13px;\n}\n\n@media (hover: hover) {\n  .animateButton:hover,\n  .copyButton:hover {\n    background-color: #3c3c3c;\n    transition: 0.2s;\n  }\n}\n\n\n.buttonContainer {\n  /* this allows the buttons to have their correct heights */\n  align-items: center;\n  display: flex;\n}\n\n.scrollableSolutions {\n  border-bottom-left-radius: 10px;\n  border-bottom-right-radius: 10px;\n  color-scheme: dark;\n  flex: 1;\n  overflow-y: scroll;\n}\n\n.solution {\n  margin-right: 8px;\n}\n\n.solutionLi {\n  line-height: 2;\n  border-bottom: 1px solid #121212;\n  padding-bottom: 5px;\n  padding-top: 5px;\n}\n\n.solutionsDisplay {\n  border-radius: 10px;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  /* take up 95% of the container */\n  max-height: 95%;\n  width: 100%;\n}\n\n.solutionsDisplayContainer {\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  /* ? can use a non-flexbox */\n  /* the solutionsDisplayContainer will flex 1/2 of the solvePageMinusNav height */\n  flex: 1;\n  justify-content: center;\n  /* this allows the container to shrink somewhat as height is not set otherwise, but it caps out at a certain point, so the scrollable solutions is visible */\n  min-height: 300px;\n  padding: 0;\n  padding: 25px 5%;\n  /* allows for positioning of the CopyPopup */\n  position: relative;\n}\n\n.solutionsHeader {\n  align-items: center;\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n  display: flex;\n  padding: 12px 5px 12px 15px;\n}\n\n.solutionsHeaderSpacer {\n  /* horizontal spacer in the header to push sort buttons to the right */\n  flex: 1;\n}\n\n.solutionsIcon {\n  margin-left: 4px;\n  margin-right: 10px;\n}\n\n.solutionsUl {\n  list-style-type: none;\n  margin-top: 5px;\n  padding: 0 12px 0 12px;\n}\n\n.sortButton {\n  border: none;\n  border-radius: 10px;\n  cursor: pointer;\n  /* needed due to user agent stylesheet override */\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  margin-right: 8px;\n  /* for the ripples */\n  overflow: hidden;\n  padding: 5px 10px;\n  /* for the ripples */\n  position: relative;\n}\n\n@media (hover: hover) {\n  .sortButton:hover {\n    background-color: #3e5d87;\n    transition: 0.2s;\n  }\n}\n\n.solutionLi .copyButton {\n  /* add some spacing between the solution and number */\n  margin-left: 10px;\n  /* when solutions go on two lines this keeps it lined up */\n  text-align: left;\n}\n\n/** light mode */\n.light .animateButton,\n.light .copyButton {\n  background-color: #f7f7f7;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 1px 3px 0px, rgba(0, 0, 0, 0.06) 0px 1px 2px 0px;\n  color: #313131;\n}\n\n.light .solutionLi {\n  border-bottom-color: #d9d7d7;\n}\n\n /* get rid of sticky hover when clicking in a field on mobile */\n@media (hover: hover) {\n  .light .animateButton:hover,\n  .light .copyButton:hover {\n    background-color: #ECECEC;\n    transition: 0.2s;\n  }\n  .light .scrollableSolutions {\n    color-scheme: normal;\n  }\n\n  .light .sortButton:hover {\n    background-color: #303F9F;\n    transition: 0.2s;\n  }\n\n}\n\n\n/** media queries */\n@media (max-width: 767px) {\n  .solutionsDisplayContainer {\n    /* changing the sizing style since the padding is a more significant part of the screen width, this is easier to work with */\n    box-sizing: border-box;\n    /* takes up 1/3rd of the solvePageMinusNav, allowing the cube visual to have enough room */\n    flex: 0.5;\n    padding: 5px 10px;\n    width: 100%;\n  }\n}\n",".iconAndTooltip {\n  position: relative;\n}\n\n.tooltip {\n  border-radius: 5px;\n  box-shadow: rgba(14, 30, 37, 0.12) 0px 2px 4px 0px, rgba(14, 30, 37, 0.32) 0px 2px 16px 0px;\n  /* by default do not show or take up space */\n  display: none;\n  font-size: 14px;\n  left: 30px;\n  line-height: 1.5;\n  padding: 5px 10px;\n  /* positioned relative to the .iconAndTooltip */\n  position: absolute;\n  /* override all caps that came from the labels */\n  text-transform: none;\n  /* appear above other info tags in certain viewports */\n  z-index: 1;\n}\n\n/* needed to handle the scramble as we don't want that to split into two lines */\n.scrambleTooltip {\n  width: max-content;\n}\n\n.scrambleTooltip,\n.depthTooltip,\n.movesetTooltip {\n  /* override label font-weight */\n  font-weight: 500;\n}\n\n/* make all tooltips visible on hover, display type does not really matter on mobile, these function as buttons due to sticky hover */\n.depthIcon:hover+.depthTooltip {\n  display: inline;\n}\n\n.movesetIcon:hover+.movesetTooltip {\n  display: inline;\n}\n\n.scrambleIcon:hover+.scrambleTooltip {\n  display: inline;\n}\n\n.solutionsIcon:hover+.solutionsTooltip {\n  display: inline;\n}\n\n/* base widths for the other tooltip, the tooltip will not tightly wrap the p element as you need JS for that */\n.movesetTooltip p {\n  width: 250px;\n}\n\n.depthTooltip p {\n  width: 250px;\n}\n\n.solutionsTooltip p {\n  width: 290px;\n}\n\n/* add some margins between p tags for spacing */\n.tooltip p {\n  margin-bottom: 3px;\n  margin-top: 3px;\n}\n\n.queryFormContainer .icon {\n  margin-left: 4px;\n}\n\n/** media queries */\n\n/* start to move over tooltips when width shrinnks */\n@media (max-width: 560px) {\n\n  .scrambleTooltip,\n  .depthTooltip,\n  .movesetTooltip,\n  .solutionsTooltip {\n    left: -50px;\n    top: 30px;\n  }\n}\n\n@media (max-width: 480px) {\n\n  .scrambleTooltip,\n  .depthTooltip,\n  .movesetTooltip,\n  .solutionsTooltip {\n    left: 50%;\n    position: fixed;\n    top: 50%;\n    transform: translate(-50%, -50%);\n  }\n\n\n  .depthTooltip p,\n  .movesetTooltip p,\n  .solutionsTooltip p {\n    width: 80vw;\n  }\n}\n\n@media (max-width: 350px) {\n  .scrambleTooltip p {\n    width: 80vw;\n  }\n}",".fadeOutAnimation {\n  animation-delay: 1.5s;\n  animation-duration: 1s;\n  animation-fill-mode: forwards;\n  animation-name: fadeOut;\n}\n\n.ripple {\n  animation: ripple 350ms linear;\n  /* reset the animation to the beginning */\n  animation-fill-mode: forwards;\n  border-radius: 50%;\n  /* take it out of the flow of the document to show above the button */\n  position: absolute;\n}\n\n.spinner {\n  animation: spin infinite 2s linear;\n  margin: 0 5px;\n}\n\n@keyframes fadeOut {\n  0% {\n    opacity: 1;\n  }\n\n  100% {\n    opacity: 0;\n  }\n}\n\n/* The ripple should initially start semi opaque and become fully transparent by the end of the transform, it will start at some arbitrary scale and grow to be a circle with diameter of the longest side length of the button that produced the ripple. The ripple is continuously offset based on the code in the createRipple function. and the ripple is also offset by the 'top' and 'left' properties dynamically in the createRipple function. Note the ripple might not truly fill the button as the ripple is a circle but the button might be a square, this can be changed by making the ripple grow to a larger size if needed */\n@keyframes ripple {\n  from {\n    opacity: 0.5;\n  }\n  to {\n    opacity: 0;\n    transform: scale(1);\n  }\n}\n\n@keyframes spin {\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n}",".solvePageMinusNav {\n  /* the whole page contains the topHalf and bottomHalf, it will be a flex container to flex these two children vertically. The whole page should have a flex of 1, to take up any remaining space that the navbar does not occupy. */\n  display: flex;\n  /* occupy the full height of the root except for the fixed navbar. Due to minimum heights, the solvePageMinusNav will eventually overflow the viewport and allow the user to scroll. */\n  flex: 1;\n  flex-direction: column;\n  /* override user style sheet */\n  letter-spacing: 0.01rem;\n  /* since the navbar is taken out of flow with position: fixed; this pushes the elements down, repeated section for clarity */\n  margin-top: 50px;\n  /* since this doesn't have an assigned height, we need to stop protecting its children and allow it to shrink https://codepen.io/Sean713/pen/PoBZKbP */\n  min-height: 0;\n}\n\n@media (max-width: 767px) {\n\n  /* when the top half stacks vertically, move all the elements down a bit */\n  .solvePageMinusNav {\n    margin-top: 60px;\n  }\n}\n\n@media (max-width: 300px) {\n\n  /* the navbar text is too big */\n  .solvePageMinusNav {\n    margin-top: 50px;\n  }\n}","h2 {\n  margin: 30px 0 0 0;\n}\n\n.cubeAndCaption {\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n}\n\n.cubePicture {\n  max-width: 70%;\n}\n\n/* width is forced to max since the document flexes vertically */\n.cubeRow {\n  display: flex;\n  justify-content: center;\n}\n\n.documentationDiv {\n  display: flex;\n  flex-direction: column;\n  /* since the navbar is taken out of flow with position: fixed; this pushes the elements down */\n  margin-top: 70px;\n  padding: 0px 4% 40px 4%;\n}\n\n.cubeAndCaption p {\n  /* p may be aligned within cubeAndCaption, but the text inside isn't, this is needed for when the caption is too long as per tony's explanation */\n  text-align: center;\n}\n\n.documentationDiv a {\n  color: #bb86fcc2;\n  font-weight: bold;\n  text-decoration: none;\n}\n\n.documentationDiv h2,\n.documentationDiv h3,\n.documentationDiv p,\n.documentationDiv li {\n  color: white;\n}\n\n.documentationDiv hr {\n  margin: 30px 0;\n}\n\n.madeThisContainer {\n  display: flex;\n}\n\n.madeThisContainerBlurb {\n  flex: 1;\n  padding: 0 250px;\n}\n\n#madeThis {\n  margin-top: 30px;\n}\n\n.tableOfContents {\n  border-radius: 15px;\n  display: flex;\n  margin-top: 30px;\n  padding: 20px;\n}\n\n.technicalTable,\n.generalTable,\n.relevantLinksTable {\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n}\n\n.youtubeVideo {\n  min-width: 420px;\n}\n\n/** light mode */\n.light .documentationDiv a {\n  color: #6200ee;\n}\n\n.light .documentationDiv h2,\n.light .documentationDiv h3,\n.light .documentationDiv p {\n  color: #313131;\n}",".darkButton {\n  align-items: center;\n  background-color: transparent;\n  border: none;\n  border-radius: 43px;\n  box-sizing: border-box;\n  color: #fff;\n  display: flex;\n  height: 43px;\n  justify-content: center;\n  margin-right: 3vw;\n  /* the ripple shouldn't exceed past the button */\n  overflow: hidden;\n  padding: 0;\n  /* position the ripple absolutely inside the button */\n  position: relative;\n  width: 43px;\n}\n\n.darkButton:hover {\n  background-color: #282828;\n  cursor: pointer;\n}\n\n.light .darkButton {\n  color: #313131;\n}\n\n.light .darkButton:hover {\n  background-color: #F0F0F0;\n}\n\n@media (max-width: 372px) {\n  .darkButton {\n    margin-right: 10px;\n  }\n}\n\n@media (max-width: 300px) {\n  .darkButton {\n    height: 37.5px;\n    width: 37.5px;\n  }\n}","li a {\n  /* for unactive tabs */\n  color: white;\n  display: block;\n  padding: 10px 15px;\n  text-align: center;\n  text-decoration: none;\n}\n\n/* don't need to handle sticky hover for mobile, as when we click on a page in mobile it will always change to be active */\nli a:hover:not(.accentColorText) {\n  background-color: #282828;\n}\n\n.navbarDiv {\n  /* center the toggle */\n  align-items: center;\n  /* set color so when scrolling the navbar is not see through */\n  background-color: #121212;\n  border-bottom: 2px solid #1e1e1e;\n  display: flex;\n  /* navbar contains the UL and the toggle so this spaces them out */\n  justify-content: space-between;\n  /* make navbar stay on the top, particularly for documentation page */\n  position: fixed;\n  /* expand to width of the page */\n  width: 100%;\n  z-index: 1;\n}\n\n.navbarUl {\n  display: flex;\n  list-style-type: none;\n  padding-left: 3vw;\n}\n\n\n/** light mode */\n.light li a {\n  color: #313131;\n}\n\n/* don't need to handle sticky hover for mobile, as when we click on a page in mobile it will always change to be active */\n.light li a:hover:not(.active) {\n  background-color: #F0F0F0;\n}\n\n.light .active {\n  color: #f3f1fe;\n}\n\n.light .navbarDiv {\n  background-color: #FAFAF9;\n  border-bottom-color: #e7e7e7;\n}\n\n\n/** media queries */\n\n@media (max-width: 372px) {\n\n  /* on very thin screens make the nav elements closer together */\n  .navbarUl {\n    padding-left: 10px;\n  }\n}\n\n@media (max-width: 300px) {\n\n  /* the navbar text is too big */\n  .navbarDiv {\n    font-size: 12px;\n  }\n}","body {\n  /* react boilerplate */\n  margin: 0;\n  padding: 0;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  /* my styling */\n  /* remove blue flash on some responsive sites */\n  -webkit-tap-highlight-color: transparent;\n  background-color: #121212;\n  font-family: 'Poppins', sans-serif;\n  font-size: 15px;\n  font-weight: 500;\n}\n\nbutton {\n  /* override user style sheet */\n  letter-spacing: 0.01rem;\n}\n\n/* react boilerplate */\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n    monospace;\n}\n\n.accentColor {\n  background-color: #4A6FA5;\n}\n\n.accentColorText {\n  color: #0f0f0f;\n}\n\n.errorColor {\n  background-color: #9B4D54;\n  color: #0f0f0f;\n}\n\n.mainColor {\n  background-color: #1e1e1e;\n}\n\n.mainText {\n  color: #e4e4e4;\n}\n\n.secondaryColor {\n  background-color: #222;\n}\n\n.shadow {\n  box-shadow:\n    /* offset-x | offset-y | blur-radius | spread-radius | color */\n    0px 8px 10px 1px hsla(0, 0%, 0%, 0.14),\n    0px 3px 14px 2px hsla(0, 0%, 0%, 0.12),\n    0px 5px 5px -3px hsla(0, 0%, 0%, 0.2);\n}\n\n.topHalf {\n  /* ? top half can be removed and just the items are used */\n  display: flex;\n  /* the top half will occupy 1/2 of the solvePageMinusNav height */\n  flex: 1;\n}\n\n#root {\n  display: flex;\n  flex-direction: column;\n  /* root should always take full VH unless the content overflows it such as small screens for the solve page, or the documentation page, which will cause scrollbars */\n  height: 100vh;\n}\n\n/** light mode */\n\nbody.light {\n  background-color: #FAFAF9;\n}\n\n.light .accentColor {\n  background-color: #4051B5;\n}\n\n.light .accentColorText {\n  color: #f3f1fe;\n}\n\n.light .errorColor {\n  background-color: #8C3432;\n  color: #f3f1fe;\n}\n\n.light .mainColor {\n  background-color: #e7e7e7;\n}\n\n.light .mainText {\n  color: #313131;\n}\n\n.light .secondaryColor {\n  background-color: #f2f2f2;\n}\n\n.light .shadow {\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 1px 3px 0px, rgba(0, 0, 0, 0.06) 0px 1px 2px 0px;\n}\n\n/** media queries */\n\n@media (max-width: 767px) {\n  .topHalf {\n    /* top half should be center on a mobile view */\n    align-items: center;\n    /* flex the queryFormContainer and cubePanel vertically */\n    flex-direction: column;\n    /* top half takes up more space compared to solutions display when in vertical flex mode */\n    flex: 1;\n    /* in the stacked few, prevent the cube from becoming too big */\n    max-height: 700px;\n    /* top half should now fill the width of the wholePageMinusNavbar div */\n    width: 100%;\n  }\n}"],"names":[],"sourceRoot":""}