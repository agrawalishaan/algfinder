.bottomButton {
  border-radius: 15px;
  border: none;
  cursor: pointer;
  font-weight: bold;
  height: 50px;
}

.bottomButton:active {
  transform: translateY(5px);
}

.buttonGrid>.movesetButton:nth-child(13) {
  border-bottom-left-radius: 20px;
}

.buttonGrid>.movesetButton:nth-child(18) {
  border-bottom-right-radius: 20px;
}

.cancelButton {
  margin-top: 10px;
  margin-right: 10px;
  width: 80px;
}

.isToggled {
  color: #0f0f0f;
  transition: 0.2s;
}

.movesetButton {
  border-radius: 0;
  border: none;
  cursor: pointer;
  font-weight: bold;
  height: 30px;
  width: calc(100% / 6);
  /* take 1/6th of the button grid which is a blocking div inside the queryFormContainer */
}

.queryFormContainer {
  box-sizing: border-box;
  /* make the width capped at true 650px including padding */
  flex: 1;
  /* take up half of the width (but get capped via max width),
  or half of height (but get capped via .topHalf max height) */
  max-width: 650px;
  padding: 50px 0 0 5%;
  /* large screen positionings */
}


.queryFormContainer input {
  border: none;
  box-sizing: border-box;
  /* make it true 100% width */
  font-weight: 600;
  height: 50px;
  outline: none;
  padding: 0 35px;
  width: 100%;
  /* expand to fill full queryFormContainer */
}

.queryFormContainer input:focus::placeholder {
  color: transparent;
  /* make the placeholder disappear when clicked in */
}

.queryFormContainer label {
  display: flex;
  /* this also makes the width of the label 100% since labels are not by default */
  font-size: 0.8rem;
  font-weight: 600;
  line-height: 2;
  padding: 10px 0 10px 20px;
  text-transform: uppercase;
}

.randomExampleButton {
  margin-top: 10px;
  padding: 0 12px;
}

.scrambleLabel {
  border-top-left-radius: 20px;
  border-top-right-radius: 20px;
}

.submitAndCancel {
  display: flex;
  width: 100%;
}

.submitButton {
  flex: 1;
  margin: 10px 10px 0 0;
}

@media (hover: hover) {
  .queryFormContainer input:hover:not(:focus) {
    /* get rid of sticky hover when clicking in a field on mobile */
    background-color: #4c4c4c;
  }
}

@media (hover: hover) {
  .queryFormContainer button:hover:not(.isToggled) {
    /* get rid of sticky hover when clicking in a field on mobile */
    background-color: #4c4c4c;
    transition: 0.2s;
  }
}

/** light mode */
.light .isToggled {
  color: #f3f1fe;
}

.light .spinner {
  color: #313131;
}

@media (hover: hover) {

  /* get rid of sticky hover when clicking in a field on mobile */
  .light .queryFormContainer button:hover:not(.isToggled) {
    background-color: #d6d3d3;
  }
}

@media (hover: hover) {

  /* get rid of sticky hover when clicking in a field on mobile */
  .light .queryFormContainer input:hover:not(:focus) {
    background-color: #d6d3d3;
  }
}


/** media queries */

@media (max-width: 767px) {
  .buttonGrid>.movesetButton:nth-child(13) {
    border-bottom-left-radius: 10px;
  }

  .buttonGrid>.movesetButton:nth-child(18) {
    border-bottom-right-radius: 10px;
  }

  .movesetButton {
    height: 40px;
  }

  .queryFormContainer {
    box-sizing: border-box;
    /* changing the sizing style since the padding is a more significant part of the screen width, this is easier to work with */
    max-width: none;
    padding: 15px 10px 10px 10px;
    /* move query form up to use extra space */
    width: 100%;
    /* once we flex vertically, fill the whole screen */
  }

  .scrambleLabel {
    border-top-left-radius: 10px;
    border-top-right-radius: 10px;
  }

  .submitButton {
    border-radius: 10px;
  }
}

@media (max-width: 500px) {
  .randomExampleButton {
    max-width: 120px;
  }
}